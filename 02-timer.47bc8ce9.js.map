{"version":3,"sources":["js/02-timer.js"],"names":["timerMarkup","document","querySelector","fields","querySelectorAll","values","labels","cndwnDays","cndwnHours","cndwnMinutes","cndwnSeconds","startBtn","style","display","field","marginRight","textAlign","fontSize","fontWeight","label","Timer","constructor","onTick","start","futureDate","Date","setInterval","currentDate","now","countdown","time","convertMs","pad","value","String","padStart","ms","days","Math","floor","hour","hours","minute","minutes","second","seconds","timer","updateCountdown","textContent","addEventListener"],"mappings":";AAAA,MAAMA,EAAcC,SAASC,cAAc,UACrCC,EAASF,SAASG,iBAAiB,UACnCC,EAASJ,SAASG,iBAAiB,UACnCE,EAASL,SAASG,iBAAiB,UACnCG,EAAYN,SAASC,cAAc,qBACnCM,EAAaP,SAASC,cAAc,sBACpCO,EAAeR,SAASC,cAAc,wBACtCQ,EAAeT,SAASC,cAAc,wBAEtCS,EAAWV,SAASC,cAAc,sBAGxCF,EAAYY,MAAMC,QAAU,OAE5B,IAAK,IAAIC,KAASX,EAChBW,EAAMF,MAAMG,YAAc,OAC1BD,EAAMF,MAAMI,UAAY,SACxBF,EAAMF,MAAMK,SAAW,OACvBH,EAAMF,MAAMM,WAAa,MAG3B,IAAK,IAAIC,KAASb,EAChBa,EAAMP,MAAMC,QAAU,QACtBM,EAAMP,MAAMK,SAAW,OACvBE,EAAMP,MAAMM,WAAa,MAW3B,MAAME,EACJC,aAAY,OAAEC,IACPA,KAAAA,OAASA,EAEhBC,QACQC,MAAAA,EAAa,IAAIC,KAAK,8BAC5BC,YAAY,KACJC,MAAAA,EAAcF,KAAKG,MACnBC,EAAYL,EAAaG,EACzBG,EAAO,KAAKC,UAAUF,GACvBP,KAAAA,OAAOQ,IACX,KAILE,IAAIC,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAEnCJ,UAAUK,GAYD,MAAA,CAAEC,KALI,KAAKL,IAAIM,KAAKC,MAAMH,EAFrBI,QAOGC,MAJD,KAAKT,IAAIM,KAAKC,MAAOH,EAHvBI,MADCE,OAQSC,QAHN,KAAKX,IAAIM,KAAKC,MAAQH,EAJ1BI,MADCE,KADEE,MASgBC,QAFf,KAAKb,IAAIM,KAAKC,MAASH,EAL3BI,MADCE,KADEE,IADA,QAcnB,MAAME,EAAQ,IAAI1B,EAAM,CAAEE,OAAQyB,IAQlC,SAASA,GAAgB,KAAEV,EAAF,MAAQI,EAAR,QAAeE,EAAf,QAAwBE,IAC/CtC,EAAUyC,eAAiBX,IAC3B7B,EAAWwC,eAAiBP,IAC5BhC,EAAauC,eAAiBL,IAC9BjC,EAAasC,eAAiBH,IAThClC,EAASsC,iBAAiB,QAAS,KACjCH,EAAMvB","file":"02-timer.47bc8ce9.js","sourceRoot":"../src","sourcesContent":["const timerMarkup = document.querySelector('.timer');\nconst fields = document.querySelectorAll('.field');\nconst values = document.querySelectorAll('.value');\nconst labels = document.querySelectorAll('.label');\nconst cndwnDays = document.querySelector('.value[data-days]');\nconst cndwnHours = document.querySelector('.value[data-hours]');\nconst cndwnMinutes = document.querySelector('.value[data-minutes]');\nconst cndwnSeconds = document.querySelector('.value[data-seconds]');\n// console.log(cndwnSeconds);\nconst startBtn = document.querySelector('button[data-start]');\n\n// -----------------------красота-----------------\ntimerMarkup.style.display = 'flex';\n\nfor (let field of fields) {\n  field.style.marginRight = '15px';\n  field.style.textAlign = 'center';\n  field.style.fontSize = '50px';\n  field.style.fontWeight = '500';\n}\n\nfor (let label of labels) {\n  label.style.display = 'block';\n  label.style.fontSize = '36px';\n  label.style.fontWeight = '400';\n}\n// -----------------\n\n// берем дату в будущем\n// вычисляем разницу между будущей и текущей датой\n//делаем эти вычисления раз в секунду\n// разницу приводим к дням / часам / минутам / секундам\n// записываем приведенную дату в поля таймера\n// обновляем поля\n//---------------------------делаем класс-----------------------------\nclass Timer {\n  constructor({ onTick }) {\n    this.onTick = onTick;\n  }\n  start() {\n    const futureDate = new Date('Novenber 24, 2021 14:25:00');\n    setInterval(() => {\n      const currentDate = Date.now();\n      const countdown = futureDate - currentDate;\n      const time = this.convertMs(countdown);\n      this.onTick(time);\n    }, 1000);\n  }\n\n  // -------------перевод мс в дни/часы и тд--------------------------\n  pad(value) {\n    return String(value).padStart(2, '0');\n  }\n  convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    const days = this.pad(Math.floor(ms / day));\n    const hours = this.pad(Math.floor((ms % day) / hour));\n    const minutes = this.pad(Math.floor(((ms % day) % hour) / minute));\n    const seconds = this.pad(Math.floor((((ms % day) % hour) % minute) / second));\n\n    return { days, hours, minutes, seconds };\n  }\n}\n\nconst timer = new Timer({ onTick: updateCountdown });\n\n// ------------------------слушатель на кнопку Старт------\nstartBtn.addEventListener('click', () => {\n  timer.start();\n});\n\n// ---------------обновляем цифры на странице--------------\nfunction updateCountdown({ days, hours, minutes, seconds }) {\n  cndwnDays.textContent = `${days}`;\n  cndwnHours.textContent = `${hours}`;\n  cndwnMinutes.textContent = `${minutes}`;\n  cndwnSeconds.textContent = `${seconds}`;\n}\n"]}