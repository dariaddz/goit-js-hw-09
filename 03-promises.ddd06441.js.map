{"version":3,"sources":["js/03-promises.js"],"names":["form","document","querySelector","delayField","stepField","amountField","submitBtn","addEventListener","onSubmitBtn","promissesArray","formFilter","position","delay","evt","preventDefault","i","value","push","console","log"],"mappings":";AAAA,MAAMA,EAAOC,SAASC,cAAc,QAC9BC,EAAaF,SAASC,cAAc,qBACpCE,EAAYH,SAASC,cAAc,oBACnCG,EAAcJ,SAASC,cAAc,sBACrCI,EAAYL,SAASC,cAAc,uBAEzCI,EAAUC,iBAAiB,QAASC,GAEpC,IAAIC,EAAiB,GAEjBC,EAAa,CACfC,SAAU,EACVC,MAAO,IAKT,SAASJ,EAAYK,GACnBA,EAAIC,iBACC,IAAA,IAAIC,EAAI,EAAGA,GAAKV,EAAYW,MAAOD,GAAK,EAC3CL,EAAWE,MAAQT,EAAWa,MAC9BN,EAAWC,SAAWI,EAExBN,EAAeQ,KAAKP,GACpBQ,QAAQC,IAAIV","file":"03-promises.ddd06441.js","sourceRoot":"../src","sourcesContent":["const form = document.querySelector('form');\nconst delayField = document.querySelector('input[name=delay]');\nconst stepField = document.querySelector('input[name=step]');\nconst amountField = document.querySelector('input[name=amount]');\nconst submitBtn = document.querySelector('button[type=submit]');\n\nsubmitBtn.addEventListener('click', onSubmitBtn);\n\nlet promissesArray = [];\n\nlet formFilter = {\n  position: 0,\n  delay: '',\n};\n\n// console.log(promissesArray);\n\nfunction onSubmitBtn(evt) {\n  evt.preventDefault();\n  for (let i = 1; i <= amountField.value; i += 1) {\n    formFilter.delay = delayField.value;\n    formFilter.position = i;\n  }\n  promissesArray.push(formFilter);\n  console.log(promissesArray);\n}\n\n// -------------не мой код для объекта-------------\n// вешаем слушателя на форму\n// form.addEventListener('input', inputForm);\n// function inputForm(evt) {\n//   formFilter[evt.target.name] = evt.target.value;\n//   // localStorage.setItem(LOCALSTORAGE_KEY, JSON.stringify(formFilter));\n//   console.log(formFilter);\n// }\n\n// --------------------------------------------\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"]}